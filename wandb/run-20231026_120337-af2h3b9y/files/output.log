Using Cuda
torch.Size([128, 1])
tensor([3], device='cuda:1')
torch.Size([128, 1])
tensor([50], device='cuda:1')
torch.Size([128, 1])
tensor([82], device='cuda:1')
torch.Size([128, 1])
tensor([109], device='cuda:1')
torch.Size([128, 1])
tensor([23], device='cuda:1')
torch.Size([128, 1])
tensor([42], device='cuda:1')
torch.Size([128, 1])
tensor([12], device='cuda:1')
torch.Size([128, 1])
tensor([31], device='cuda:1')
Traceback (most recent call last):
  File "main.py", line 65, in <module>
    for batch in dataloader:
  File "/nfs/home/students/t.reim/.conda/envs/mamba2/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 630, in __next__
    data = self._next_data()
  File "/nfs/home/students/t.reim/.conda/envs/mamba2/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 674, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/nfs/home/students/t.reim/.conda/envs/mamba2/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/nfs/home/students/t.reim/.conda/envs/mamba2/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/nfs/home/students/t.reim/bachelor/pytorchtest/data/data.py", line 276, in __getitem__
    padd_sequence(seq2, self.max)
  File "/nfs/home/students/t.reim/bachelor/pytorchtest/data/data.py", line 225, in padd_sequence
    sequence.extend(np.zeros((1,24)))
KeyboardInterrupt
torch.Size([128, 1])
tensor([108], device='cuda:1')